<%- include("super-common-header.ejs", {title:title }) %>


<% if(locals.errors) {   //Check to see if there even is an errors variable %>
  <div class="alert alert-danger">
    <ul class="mb-0">
      <% errors.forEach(function(error) { %>
        <li><%= error %></li>
      <% }); %>
    </ul>
  </div>
<% } %>

<%# Set action to return to the update route regardless of if we got here from create or update routes %>
<form method="POST" action="/heroes/update/<%= hero._id %>" id="heroForm">
  <input type="hidden" name="id" value="<%= hero._id %>" >
  <div class="mb-3">
    <label for="name" class="form-label">Name <em>(Required)</em></label>
    <input type="text" class="form-control" name="name" id="name"
      value="<%= hero.name %>" required>
  </div>
  <div class="mb-3">
    <label for="secretIdentity" class="form-label">Secret Identity</label>
    <input type="text" class="form-control" name="secretIdentity" id="secretIdentity"
      value="<%= hero.secretIdentity %>" >
  </div>
  <div class="mb-3">
    <label for="age" class="form-label">Age <em>(Required)</em></label>
    <input type="number" class="form-control" name="age" id="age"
    value="<%= hero.age %>" required min="0">
  </div>
  <div class="mb-3">
    <label for="powers" class="form-label">Powers</label>
    <textarea class="form-control" name="powers" id="powers" rows="8"
    aria-describedby="powersHelp"><%= hero.powers.join("\n") -%></textarea>
    <div id="powersHelp" class="form-text">Enter one power per line.</div>
  </div>

  <p>Team select as radio buttons because it is a single option:</p>
  <fieldset class="mb-3 ">
    <legend>Team</legend>
    <% for(let t of teams) { %>
      <div class="form-check">
        <%# Have to use .equals to compare _ids!!!!!!! %>
        <input type="radio" class="form-check-input" name="team" value="<%= t._id %>"
        id="team_<%= t._id %>" <%= hero.team && hero.team._id.equals(t._id) ? "checked" : "" %>>
        <label for="team_<%= t._id %>" class="form-check-label"><%= t.squadName %></label>
      </div>
    <% } %>
    <div class="form-check">
      <input type="radio" class="form-check-input" name="team" value=""
      id="team_none" <%= !hero.team ? "checked" : "" %>>
      <label for="team_none" class="form-check-label">None</label>
    </div>
  </fieldset>

  <div class="alert alert-warning">
    <p>Alternative Team Select as Dropdown</p>
    <div class="mb-3 ">
      <label for="teamFake">Team (Fake)</label>
      <select class="form-select" id="teamFake" name="teamFake">
        <option value="">None</option>
        <% for(let t of teams) { %>
            <%# Have to use .equals to compare _ids!!! %>
            <option value="<%= t._id %>" <%= hero.team && hero.team.equals(t._id) ? "selected" : "" %>> 
              <%= t.squadName %>
            </option>
        <% } %>
      </select>
    </div>
  </div>

  <div class="alert alert-warning">
    <p>Alternative Team Select as checkboxes - non functional</p>
    <fieldset class="mb-3 ">
      <legend>Team</legend>
      <% for(let t of teams) { %>
        <div class="form-check">
          <%# Have to use .equals to compare _ids!!! %>
          <input type="checkbox" class="form-check-input" name="teamFake2" value="<%= t._id %>"
          id="team_fake2<%= t._id %>" <%= hero.team && hero.team.equals(t._id) ? "checked" : "" %>>
          <label for="team_fake2<%= t._id %>" class="form-check-label"><%= t.squadName %></label>
        </div>
      <% } %>
    </fieldset>
  </div>

  <div class="alert alert-warning">
    <p>Alternative Team Select as Multiselect Select List</p>
    <div class="mb-3 ">
      <label for="teamFake3">Team (Fake) - use Control-Click to MultiSelect</label>
      <select class="form-select" id="teamFake3" name="teamFake3" multiple>
        <% for(let t of teams) { %>
            <%# Have to use .equals to compare _ids!!! %>
            <option value="<%= t._id %>" <%= hero.team && hero.team._id.equals(t._id) ? "selected" : "" %>> 
              <%= t.squadName %>
            </option>
        <% } %>
      </select>
    </div>
  </div>

  <hr>
  <button class="btn btn-primary my-3" type="submit">Submit</button>
</form>

<script>
  //Custom validator example

  //Attach event to the form's submit event
  const form = document.getElementById("heroForm");
  let powers = document.getElementById("powers");

  //Any time form is submitted, run validation on powers field
  form.addEventListener("submit", function (event) {
    console.log("We are validating form...");
    if(!validatePowers())
      event.preventDefault();  //stop form from submitting
  });

  //Any time we change powers value, validate it
  powers.addEventListener('change', validatePowers); 

  //Check to see if there are more than 6 lines of input
  function validatePowers() {
    let numPowers = powers.value.split("\n").length;
    if (numPowers <= 6) {
      powers.setCustomValidity("");
      powers.reportValidity();
      return true;
    } else {
      powers.setCustomValidity("Max of 6 powers");
      powers.reportValidity();
      return false;
    }
  }
</script>

<%- include("super-common-footer.ejs") %>

